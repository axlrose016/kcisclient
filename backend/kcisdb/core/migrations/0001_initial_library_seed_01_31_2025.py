# Generated by Django 5.1.4 on 2024-12-23 01:32
import uuid
from django.db import migrations

def seed_data(apps, schema_editor):
    print("Seeding data...")
    role = apps.get_model('core', 'role')
    module = apps.get_model('core', 'module')
    permission = apps.get_model('core', 'permission')

    # Create seed data for Role
    role.objects.bulk_create([
        role(id="d4003a01-36c6-47af-aae5-13d3f04e110f", role_description='Administrator'),
        role(id="cae2b943-9b80-45ea-af2a-823730f288ac", role_description='Guest'),
        role(id="17eb1f81-83d3-4642-843d-24ba3e40f45c", role_description='Finance'),
        role(id="1c99504f-ad53-4151-9a88-52e0cffdbb6d", role_description='Engineer'),
        role(id="37544f59-f3ba-45df-ae0b-c8fa4e4ce446", role_description='CFW')
    ])

    # Create seed data for Module
    module.objects.bulk_create([
        module(id="9bb8ab82-1439-431d-b1c4-20630259157a", module_description='Sub-Project'),
        module(id="4e658b02-705a-43eb-a051-681d54e22e2a", module_description='Person Profile'),
        module(id="19a18164-3a26-4ec3-ac6d-755df1d3b980", module_description='Finance'),
        module(id="4985aac6-0dd2-4779-975a-8fa8776800e3", module_description='Procurement'),
        module(id="8b32e25e-dda3-4686-98e1-5ecc390ef62c", module_description='Engineering'),
    ])

    # Create seed data for Permission
    permission.objects.bulk_create([
        permission(id="f38252b5-cc46-4cc1-8353-a49a78708739", permission_description='Can Add'),
        permission(id="98747f00-76e5-497d-beac-ba4255db066f", permission_description='Can Update'),
        permission(id="5568ea7d-6f12-4ce9-b1e9-adb256e5b057", permission_description='Can Delete'),
    ])

     # Fetch models
    lib_sex = apps.get_model('core', 'lib_sex')
    lib_civil_status = apps.get_model('core', 'lib_civil_status')
    lib_educational_attainment = apps.get_model('core', 'lib_educational_attainment')
    lib_occupation = apps.get_model('core', 'lib_occupation')
    lib_lgu_level = apps.get_model('core', 'lib_lgu_level')
    lib_mode = apps.get_model('core', 'lib_mode')

    # Bulk create records
    lib_sex.objects.bulk_create([
        lib_sex(id=1, sex_description='Male'),
        lib_sex(id=2, sex_description='Female')
    ])

    lib_civil_status.objects.bulk_create([
        lib_civil_status(id=1, civil_status_description='Anulled'),
        lib_civil_status(id=2, civil_status_description='Legally Separated'),
        lib_civil_status(id=3, civil_status_description='Married'),
        lib_civil_status(id=4, civil_status_description='Single'),
        lib_civil_status(id=5, civil_status_description='Widowed')
    ])

    lib_educational_attainment.objects.bulk_create([
        lib_educational_attainment(id=1, educational_attainment_description='College Graduate'),
        lib_educational_attainment(id=2, educational_attainment_description='College Level'),
        lib_educational_attainment(id=3, educational_attainment_description='Doctorate Level'),
        lib_educational_attainment(id=4, educational_attainment_description='Elementary Graduate'),
        lib_educational_attainment(id=5, educational_attainment_description='Elementary Level'),
        lib_educational_attainment(id=6, educational_attainment_description='Highschool Graduate'),
        lib_educational_attainment(id=7, educational_attainment_description='Highschool Level'),
        lib_educational_attainment(id=8, educational_attainment_description='Master Degree Graduate'),
        lib_educational_attainment(id=9, educational_attainment_description='No Formal Education'),
        lib_educational_attainment(id=10, educational_attainment_description='With Units in Masteral Degree'),
        lib_educational_attainment(id=11, educational_attainment_description='Vocational')
    ])

    lib_occupation.objects.bulk_create([
        lib_occupation(id=1, occupation_description='Government Official'),
        lib_occupation(id=2, occupation_description='Corporate Managers'),
        lib_occupation(id=3, occupation_description='Business Owner'),
        lib_occupation(id=4, occupation_description='Professionals'),
        lib_occupation(id=5, occupation_description='Clerical Support'),
        lib_occupation(id=6, occupation_description='Service and Sales'),
        lib_occupation(id=7, occupation_description='Agriculture and Forestry'),
        lib_occupation(id=8, occupation_description='Laborers'),
        lib_occupation(id=9, occupation_description='House Steward/ Domestic Resident'),
        lib_occupation(id=10, occupation_description='Unemployed'),
        lib_occupation(id=11, occupation_description='Student'),
        lib_occupation(id=12, occupation_description='Fisherman')
    ])

    lib_lgu_level.objects.bulk_create([
        lib_lgu_level(id=1, lgu_level_description='Barangay / Community Level'),
        lib_lgu_level(id=2, lgu_level_description='Municipal Level')
    ])

    lib_mode.objects.bulk_create([
        lib_mode(id=1, mode_description='CDD-LPP'),
        lib_mode(id=2, mode_description='DROM'),
        lib_mode(id=3, mode_description='Regular'),
        lib_mode(id=4, mode_description='DROM 2020')
    ])

    print("Data seeded successfully!")

def remove_seed_data(apps, schema_editor):
    role = apps.get_model('core', 'role')
    module = apps.get_model('core', 'module')
    permission = apps.get_model('core', 'permission')

    # Remove the seeded data
    role.objects.filter(role_description='Administrator').delete()
    module.objects.filter(module_description__in=[
        'Sub-Project', 'Finance', 'Procurement', 'Engineering'
    ]).delete()
    permission.objects.filter(permission_description__in=[
        'Can Add', 'Can Update', 'Can Delete'
    ]).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial_migration_01_31_2025'),  # Update with the correct previous migration name
    ]

    operations = [
        migrations.RunPython(seed_data, remove_seed_data),
    ]
